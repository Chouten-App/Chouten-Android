name: Android CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # Here we need to decode keystore.jks from base64 string and place it
        # in the folder specified in the release signing configuration
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android_keystore.jks'
          fileDir: '/home/runner/work/Chouten-Android/Chouten-Android/app/keystore/'
          encodedString: ${{ secrets.KEYSTORE }}

      # Build and sign APK ("-x test" argument is used to skip tests)
      - name: Build APK
        run: ./gradlew :app:assembleRelease -x test
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      # Show information about the APK's signing certificates
      - name: Verify Signature
        # get the path where the apk was built from the previous step and replace it here
        run: $ANDROID_SDK_ROOT/build-tools/33.0.1/apksigner verify --print-certs app/build/outputs/apk/release/Chouten.apk

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Chouten
          path: "app/build/outputs/apk/release/Chouten.apk"

      - name: Upload the APK to Discord
        shell: bash
        run: |
          curl -F "debug=@app/build/outputs/apk/release/Chouten.apk" ${{ secrets.DISCORD_WEBHOOK_URL }}
